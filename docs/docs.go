// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2019-12-14 23:12:44.818297 +0800 CST m=+0.057955041

package docs

import (
	"bytes"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "info": {
        "contact": {},
        "license": {}
    },
    "paths": {
        "/quick_find/friend/add": {
            "post": {
                "tags": [
                    "Friend Service"
                ],
                "summary": "Add",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the user id",
                        "name": "uid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "want to add",
                        "name": "friend_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "1000": {
                        "schema": {
                            "type": "system"
                        }
                    },
                    "800": {
                        "schema": {
                            "type": "params"
                        }
                    }
                }
            }
        },
        "/quick_find/friend/list": {
            "post": {
                "tags": [
                    "Friend Service"
                ],
                "summary": "List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the user id",
                        "name": "uid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "1000": {
                        "schema": {
                            "type": "system"
                        }
                    },
                    "800": {
                        "schema": {
                            "type": "params"
                        }
                    }
                }
            }
        },
        "/quick_find/im/send": {
            "post": {
                "tags": [
                    "IM Service"
                ],
                "summary": "send",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "from id",
                        "name": "from",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "to id",
                        "name": "to",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "message",
                        "name": "message",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "1000": {
                        "schema": {
                            "type": "system"
                        }
                    },
                    "800": {
                        "schema": {
                            "type": "params"
                        }
                    }
                }
            }
        },
        "/quick_find/im/translate": {
            "post": {
                "tags": [
                    "IM Service"
                ],
                "summary": "translate",
                "parameters": [
                    {
                        "type": "string",
                        "description": "text",
                        "name": "text",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "1000": {
                        "schema": {
                            "type": "system"
                        }
                    },
                    "800": {
                        "schema": {
                            "type": "params"
                        }
                    }
                }
            }
        },
        "/quick_find/topic/list": {
            "post": {
                "tags": [
                    "Topic Service"
                ],
                "summary": "publish",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "count",
                        "name": "count",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "want to add",
                        "name": "uid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "1000": {
                        "schema": {
                            "type": "system"
                        }
                    },
                    "800": {
                        "schema": {
                            "type": "params"
                        }
                    }
                }
            }
        },
        "/quick_find/topic/publish": {
            "post": {
                "tags": [
                    "Topic Service"
                ],
                "summary": "publish",
                "parameters": [
                    {
                        "type": "string",
                        "description": "content of the topic",
                        "name": "content",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "title of the topic",
                        "name": "title",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "want to add",
                        "name": "uid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "1000": {
                        "schema": {
                            "type": "system"
                        }
                    },
                    "800": {
                        "schema": {
                            "type": "params"
                        }
                    }
                }
            }
        },
        "/quick_find/user/login": {
            "post": {
                "tags": [
                    "User Service"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "type": "string",
                        "description": "phone number",
                        "name": "phone",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "phone code",
                        "name": "code",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "1000": {
                        "schema": {
                            "type": "system"
                        }
                    },
                    "800": {
                        "schema": {
                            "type": "params"
                        }
                    }
                }
            }
        },
        "/quick_find/user/register": {
            "post": {
                "tags": [
                    "User Service"
                ],
                "summary": "Register",
                "parameters": [
                    {
                        "type": "string",
                        "description": "phone number",
                        "name": "phone",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "phone code",
                        "name": "code",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "1000": {
                        "schema": {
                            "type": "system"
                        }
                    },
                    "800": {
                        "schema": {
                            "type": "params"
                        }
                    }
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo swaggerInfo

type s struct{}

func (s *s) ReadDoc() string {
	t, err := template.New("swagger_info").Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, SwaggerInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
